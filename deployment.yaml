trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: '1.12.0'

steps:
  
- script: |
    curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
    tflint
  displayName: 'Run TFLint'

- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '$(TF_VERSION)'

- script: |
    terraform init
  workingDirectory: $(Build.SourcesDirectory)
  displayName: 'Terraform Init'

- script: |
    terraform validate
  workingDirectory: $(Build.SourcesDirectory)/terraform
  displayName: 'Terraform Validate'


# Package PowerShell Scripts as Artifact
- task: PowerShell@2
  displayName: 'Validate Terraform files'
  inputs:
    targetType: 'inline'
    script: |
      Write-Output "Packaging Terraform files for drop"
      if (Test-Path '$(Build.SourcesDirectory)') {
        Write-Output "Terraform files directory found!"
      } else {
        Write-Error "Terraform files directory not found!"
      }

# Publish Artifact
- task: PublishPipelineArtifact@1
  displayName: 'Publish TerraformFiles Artifact'
  inputs:
    targetPath: '$(Build.SourcesDirectory)'
    artifact: 'Drop'